package Regexp::Common::IP;
use strict;
use warnings;

require Exporter;
our @ISA = qw(Exporter);
our @EXPORT_OK = qw($IPv6_re $IPv4_re);

our $VERSION = '0.04';

my $ipv4_part = '([0-9]|[1-9][0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))';
my $IPv4 = "$ipv4_part\\.$ipv4_part\\.$ipv4_part\\.$ipv4_part";
my $G = "[0-9a-fA-F]{1,4}";

my @tail = ( ":",
         "(:($G)?|$IPv4)",
             ":($IPv4|$G(:$G)?|)",
             "(:$IPv4|:$G(:$IPv4|(:$G){0,2})|:)",
         "((:$G){0,2}(:$IPv4|(:$G){1,2})|:)",
         "((:$G){0,3}(:$IPv4|(:$G){1,2})|:)",
         "((:$G){0,4}(:$IPv4|(:$G){1,2})|:)" );

my $IPv6 = $G;
$IPv6 = "$G:($IPv6|$_)" for @tail;
$IPv6 = qq/:(:$G){0,5}((:$G){1,2}|:$IPv4)|$IPv6/;
$IPv6 =~ s/\(/(?:/g;
our $IPv6_re = qr/(?:$IPv6|::)/;
our $IPv4_re = qr/$IPv4/;

1;

__END__

=head1 NAME

Regexp::Common::IP - Regular expression for IPv4 and IPv6 addresses

=head1 SYNOPSIS

  use Regexp::Common::IP qw($IPv4_re $IPv6_re);

  $address =~ /^$IPv4_re$/ and print "IPv4 address\n";
  $address =~ /^$IPv6_re$/ and print "IPv6 address\n";

=head1 DESCRIPTION

This module exports the $IPv6_re regular expression that matches any
valid IPv6 address as described in "RFC 2373 - 2.2 Text Representation
of Addresses". Any string not compliant with such RFC will be rejected.

To match full strings use C</^$IPv6_re$/>.

Additionally, this module also exports the $IPv4_re regular expression.

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2009, 2010 by Salvador FandiE<ntilde>o  E<lt>sfandino@yahoo.comE<gt>

Copyright (C) 2014 by Wesley Schwengle E<lt>wesley@schwengle.netE<gt>

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.18.0 or,
at your option, any later version of Perl 5 you may have available.

Additionally, you are allowed to use the regexp generated by the
module in any way you want, without any restriction. For instance, you
are allowed to copy it verbating in your program.

=head1 SEE ALSO

L<Regexp::IPv6>

=cut
